name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
      - name: Create release archive
        run: |
          # Get repository name
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          
          # Create archive name
          ARCHIVE_NAME="${REPO_NAME}-${{ steps.get_version.outputs.VERSION }}"
          
          # Create ZIP archive excluding unnecessary files
          zip -r "${ARCHIVE_NAME}.zip" . \
            -x "*.git*" \
            -x ".github/*" \
            -x "node_modules/*" \
            -x "__pycache__/*" \
            -x "*.pyc" \
            -x ".env" \
            -x "logs/*.log" \
            -x "outputs/www/*" \
            -x ".DS_Store" \
            -x ".pytest_cache/*" \
            -x "*.egg-info/*"
          
          # Create SHA256 checksum
          sha256sum "${ARCHIVE_NAME}.zip" > checksums.txt
          
          # Display file size
          echo "Archive size:"
          ls -lh ${ARCHIVE_NAME}.zip
          echo ""
          echo "Checksum:"
          cat checksums.txt
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Phantom Documentation Kit ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Phantom Documentation Kit ${{ steps.get_version.outputs.VERSION }}
            
            ğŸ‡¬ğŸ‡§
            
            ### Installation
            Extract and install dependencies:
            
            ```bash
            # Extract archive
            unzip phantom-documentation-kit-${{ steps.get_version.outputs.VERSION }}.zip
            cd phantom-documentation-kit-${{ steps.get_version.outputs.VERSION }}
            
            # Install Python dependencies
            pip install -r requirements.txt
            
            # Install Node.js dependencies (optional, for development tools only)
            cd tools/image-optimizer && npm install
            cd tools/vendor-builder && npm install
            ```
            
            ### License
            MIT License - See [LICENSE](LICENSE) file for details.
            Third-party licenses - See [THIRD_PARTY_LICENSES](THIRD_PARTY_LICENSES) file for dependencies.
            
            ### File Verification
            Use `checksums.txt` to verify the integrity of downloaded files:
            
            ```bash
            sha256sum -c checksums.txt
            ```
            
            ---
            
            ğŸ‡¹ğŸ‡·
            
            ### Kurulum
            ArÅŸivi aÃ§Ä±n ve baÄŸÄ±mlÄ±lÄ±klarÄ± yÃ¼kleyin:
            
            ```bash
            # ArÅŸivi aÃ§Ä±n
            unzip phantom-documentation-kit-${{ steps.get_version.outputs.VERSION }}.zip
            cd phantom-documentation-kit-${{ steps.get_version.outputs.VERSION }}
            
            # Python baÄŸÄ±mlÄ±lÄ±klarÄ±nÄ± yÃ¼kleyin
            pip install -r requirements.txt
            
            # Node.js baÄŸÄ±mlÄ±lÄ±klarÄ±nÄ± yÃ¼kleyin (opsiyonel, sadece geliÅŸtirme araÃ§larÄ± iÃ§in)
            cd tools/image-optimizer && npm install
            cd tools/vendor-builder && npm install
            ```
            
            ### Lisans
            MIT LisansÄ± - Detaylar iÃ§in [LICENSE](LICENSE) dosyasÄ±na bakÄ±nÄ±z.
            ÃœÃ§Ã¼ncÃ¼ taraf lisanslarÄ± - BaÄŸÄ±mlÄ±lÄ±klar iÃ§in [THIRD_PARTY_LICENSES](THIRD_PARTY_LICENSES) dosyasÄ±na bakÄ±nÄ±z.
            
            ### Dosya DoÄŸrulama
            Ä°ndirilen dosyalarÄ±n bÃ¼tÃ¼nlÃ¼ÄŸÃ¼nÃ¼ doÄŸrulamak iÃ§in `checksums.txt` dosyasÄ±nÄ± kullanÄ±n:
            
            ```bash
            sha256sum -c checksums.txt
            ```
            
          files: |
            phantom-documentation-kit-*.zip
            checksums.txt
          draft: false
          prerelease: false
          generate_release_notes: true